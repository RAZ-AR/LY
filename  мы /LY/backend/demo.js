#!/usr/bin/env node
console.log('üéØ LY Backend Demo\n');

const express = require('express');
const app = express();

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
try {
  console.log('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
  const cors = require('cors');
  const helmet = require('helmet');
  const morgan = require('morgan');
  
  console.log('‚úÖ Express –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à–∏ –º–∞—Ä—à—Ä—É—Ç—ã
  const companiesRoutes = require('./src/routes/companies');
  const loyaltyRoutes = require('./src/routes/loyalty');
  const passesRoutes = require('./src/routes/passes');
  const usersRoutes = require('./src/routes/users');
  const analyticsRoutes = require('./src/routes/analytics');
  
  console.log('‚úÖ API –º–∞—Ä—à—Ä—É—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Express
  app.use(helmet());
  app.use(cors());
  app.use(express.json());
  
  // Health check
  app.get('/health', (req, res) => {
    res.json({ 
      status: 'OK', 
      message: 'LY Backend is running!',
      timestamp: new Date().toISOString(),
      environment: 'demo'
    });
  });
  
  // API routes
  app.use('/api/v1/companies', companiesRoutes);
  app.use('/api/v1/loyalty-programs', loyaltyRoutes);
  app.use('/api/v1/passes', passesRoutes);
  app.use('/api/v1/users', usersRoutes);
  app.use('/api/v1/analytics', analyticsRoutes);
  
  // 404 handler
  app.use('*', (req, res) => {
    res.status(404).json({ error: 'Route not found' });
  });
  
  const PORT = 3000;
  const server = app.listen(PORT, () => {
    console.log('\nüöÄ LY Backend —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
    console.log(`üì° –°–µ—Ä–≤–µ—Ä: http://localhost:${PORT}`);
    console.log(`üîç Health check: http://localhost:${PORT}/health`);
    console.log(`üìö API Base: http://localhost:${PORT}/api/v1`);
    console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:');
    console.log('   GET /health');
    console.log('   GET /api/v1/companies');
    console.log('   GET /api/v1/users');
    console.log('   GET /api/v1/loyalty-programs');
    console.log('   GET /api/v1/passes');
    console.log('   GET /api/v1/analytics/dashboard');
    console.log('\nüí° –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è mock –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–±–µ–∑ PostgreSQL)');
    console.log('‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
  });
  
  // Graceful shutdown
  process.on('SIGTERM', () => {
    console.log('\n‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    server.close(() => {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      process.exit(0);
    });
  });
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', error.message);
  console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
  console.log('1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª');
  console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã');
  process.exit(1);
}